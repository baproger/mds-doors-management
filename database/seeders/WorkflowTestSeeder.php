<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\User;
use App\Models\Contract;
use App\Models\Branch;
use App\Services\ContractStateService;

class WorkflowTestSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $stateService = new ContractStateService();

        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π
        $manager = User::create([
            'name' => '–¢–µ—Å—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä',
            'email' => 'manager@test.com',
            'password' => bcrypt('password'),
            'role' => 'manager',
            'branch_id' => 1,
        ]);

        $rop = User::create([
            'name' => '–¢–µ—Å—Ç –†–û–ü',
            'email' => 'rop@test.com',
            'password' => bcrypt('password'),
            'role' => 'rop',
            'branch_id' => 1,
        ]);

        $accountant = User::create([
            'name' => '–¢–µ—Å—Ç –ë—É—Ö–≥–∞–ª—Ç–µ—Ä',
            'email' => 'accountant@test.com',
            'password' => bcrypt('password'),
            'role' => 'accountant',
            'branch_id' => 1,
        ]);

        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–≥–æ–≤–æ—Ä
        $contract = Contract::create([
            'contract_number' => 'TEST-001',
            'user_id' => $manager->id,
            'branch_id' => 1,
            'client' => '–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç',
            'instagram' => '@testclient',
            'iin' => '123456789012',
            'phone' => '+7 777 123 45 67',
            'phone2' => '+7 777 123 45 68',
            'address' => '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å',
            'payment' => '–ù–∞–ª–∏—á–Ω—ã–π',
            'date' => now(),
            'category' => 'Comfort',
            'model' => '–°—Ç–∞–Ω–¥–∞—Ä—Ç',
            'width' => 1000,
            'height' => 2000,
            'design' => '–ú–µ–Ω—è–µ—Ç—Å—è',
            'leaf' => '–û–¥–∏–Ω–∞—Ä–Ω–∞—è',
            'framugawidth' => '100',
            'framugaheight' => '100',
            'forging' => '–ù–µ—Ç',
            'opening' => '–ü—Ä–∞–≤–æ–µ',
            'frame' => '–°—Ç–∞–Ω–¥–∞—Ä—Ç',
            'outer_panel' => '–ü–æ—Ä–æ—à–∫–æ–≤–æ-–ø–æ–ª–∏–º–µ—Ä–Ω–æ–µ',
            'outer_cover' => '–ü–æ—Ä–æ—à–∫–æ–≤–æ-–ø–æ–ª–∏–º–µ—Ä–Ω–æ–µ',
            'outer_cover_color' => '–ë–µ–ª—ã–π',
            'metal_cover_hidden' => '–ü–æ—Ä–æ—à–∫–æ–≤–æ-–ø–æ–ª–∏–º–µ—Ä–Ω–æ–µ',
            'metal_cover_color' => '–ë–µ–ª—ã–π',
            'inner_trim' => '–ü–æ—Ä–æ—à–∫–æ–≤–æ-–ø–æ–ª–∏–º–µ—Ä–Ω–æ–µ',
            'inner_cover' => '–ü–æ—Ä–æ—à–∫–æ–≤–æ-–ø–æ–ª–∏–º–µ—Ä–Ω–æ–µ',
            'inner_trim_color' => '–ë–µ–ª—ã–π',
            'glass_unit' => '–û–¥–Ω–æ–∫–∞–º–µ—Ä–Ω—ã–π',
            'extra' => '–ù–µ—Ç',
            'lock' => '–°—Ç–∞–Ω–¥–∞—Ä—Ç',
            'handle' => '–°—Ç–∞–Ω–¥–∞—Ä—Ç',
            'steel_thickness' => 1.5,
            'canvas_thickness' => 40,
            'measurement' => 'online',
            'delivery' => '+',
            'installation' => '–¢–µ—Å—Ç–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞',
            'order_total' => 150000,
            'order_deposit' => 50000,
            'order_remainder' => 100000,
            'order_due' => 100000,
            'status' => 'draft',
            'version' => 1,
            'manager' => '–¢–µ—Å—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä',
        ]);

        // –¢–µ—Å—Ç–∏—Ä—É–µ–º workflow
        try {
            // 1. –ú–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –†–û–ü
            $stateService->submitToRop($contract, $manager);
            $this->command->info('‚úÖ –î–æ–≥–æ–≤–æ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –†–û–ü');

            // 2. –†–û–ü –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±—É—Ö–≥–∞–ª—Ç–µ—Ä—É
            $stateService->submitToAccountant($contract, $rop);
            $this->command->info('‚úÖ –î–æ–≥–æ–≤–æ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±—É—Ö–≥–∞–ª—Ç–µ—Ä—É');

            // 3. –ë—É—Ö–≥–∞–ª—Ç–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É
            $stateService->returnForRevision($contract, $accountant, '–ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å—É–º–º—É –¥–æ–≥–æ–≤–æ—Ä–∞');
            $this->command->info('‚úÖ –î–æ–≥–æ–≤–æ—Ä –≤–æ–∑–≤—Ä–∞—â–µ–Ω –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É');

            // 4. –†–û–ü —Å–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±—É—Ö–≥–∞–ª—Ç–µ—Ä—É
            $stateService->submitToAccountant($contract, $rop);
            $this->command->info('‚úÖ –î–æ–≥–æ–≤–æ—Ä —Å–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±—É—Ö–≥–∞–ª—Ç–µ—Ä—É');

            // 5. –ë—É—Ö–≥–∞–ª—Ç–µ—Ä –æ–¥–æ–±—Ä—è–µ—Ç
            $stateService->approve($contract, $accountant, '–î–æ–≥–æ–≤–æ—Ä –æ–¥–æ–±—Ä–µ–Ω');
            $this->command->info('‚úÖ –î–æ–≥–æ–≤–æ—Ä –æ–¥–æ–±—Ä–µ–Ω');

        } catch (\Exception $e) {
            $this->command->error('‚ùå –û—à–∏–±–∫–∞ –≤ workflow: ' . $e->getMessage());
        }

        $this->command->info('üéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ workflow —Å–æ–∑–¥–∞–Ω—ã!');
        $this->command->info('–õ–æ–≥–∏–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
        $this->command->info('–ú–µ–Ω–µ–¥–∂–µ—Ä: manager@test.com / password');
        $this->command->info('–†–û–ü: rop@test.com / password');
        $this->command->info('–ë—É—Ö–≥–∞–ª—Ç–µ—Ä: accountant@test.com / password');
    }
}
